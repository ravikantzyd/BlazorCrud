@page "/employees"
@using Services
@inject IEmployeeService employeeService
@inject IJSRuntime jsRuntime
<h3>Employees</h3>
<a href="/employee/add" class="btn btn-outline-dark my-2">Add more</a>
<div class="row">
    <div class="col-md-6">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var employee in employees)
                {
                    <tr>
                        <td>@employee.Name</td>
                        <td>@employee.Email</td>
                        <td>
                            <a href="/employee/edit/@employee.Id" class="btn btn-success">Edit</a>
                            <a class="btn btn-danger" @onclick="async ()=> await Delete(employee)">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<Models.Employee> employees = new();

    private async Task Delete(Models.Employee employee)
    {
        bool confirmed = await jsRuntime.InvokeAsync<bool>("confirm", "Are you sure????");
        if (confirmed)
        {
            if (employeeService.Delete(employee.Id))
            {
                employees.Remove(employee);
            }

        }
    }

    protected override void OnInitialized()
    {
        employees = employeeService.GetAll();
        base.OnInitialized();
    }
}
